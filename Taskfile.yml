# Tasks can be run using 'Task' task runner
# Cross-platform binaries available at: https://github.com/go-task/task
#
# Set variables such as {{ .CORPUS_PATH }} in sister file, "Taskvars.yml"

build-all-abui:
  desc: "Run through entire processing pipeline"
  cmds:
    # 
    - ^tmp-makedir
    - ^tmp-delete

    - export PYTHONIOENCODING="utf-8"

    # Gather ELAN/TextGrid data into json files
    - task elan-to-json > {{ .TMP_PATH }}/elan1.json
    - task elan-to-json > {{ .TMP_PATH }}/elan2.json

    # Concatenate all gathered data into one file
    - find {{ .TMP_PATH }} -name "elan*.json" -exec cat {} +
        | task cat-all-json > {{ .TMP_PATH }}/all_corpus_json.json

    # Filter JSON data: for Abui select only the tier which is the same as the speaker ID
    - cat {{ .TMP_PATH }}/all_corpus_json.json
        | jq 'map(select(.speakerId == .tier))' > {{ .TMP_PATH }}/selected_corpus_json.json

    # Clean corpus data for import to Kaldi
    - task clean-json < {{ .TMP_PATH }}/selected_corpus_json.json > {{ .TMP_PATH }}/cleaned_selected_corpus.json

    - task make-wordlist < {{ .TMP_PATH }}/cleaned_selected_corpus.json > {{ .TMP_PATH }}/corpus_wordlist.txt

    - task json-to-kaldi < tmp/cleaned_selected_corpus.json

##################### Test definitions

##################### Job definitions

tmp-makedir:
  desc: "Make the tmp directory"
  status:
    # Run only if tmp is not a directory
    - test -d tmp
  cmds:
    - mkdir tmp

tmp-delete:
  desc: "Delete all files in tmp directory"
  cmds:
    - rm -r tmp/*

elan-to-json:
  desc: "Convert a folder of .eaf files to a single JSON file"
  cmds:
    - python3.6 {{ .SCRIPTS_PATH }}/audio_segmenter/elan_to_json.py {{ .CORPUS_PATH }}

cat-all-json:
  desc: "Concatenate all .json files into one .json file"
  cmds:
    - jq -s '. | add'

clean-json:
  desc: "Clean corpus of problematic characters before passing data to Kaldi"
  env:
    PYTHONIOENCODING: "utf-8"
  cmds:
    - python3 {{ .SCRIPTS_PATH }}/text_processing/clean_text.py

make-wordlist:
  desc: "Make a list of unique words that occur in the corpus"
  env:
    PYTHONIOENCODING: "utf-8"
  cmds:
    - python3 text_processing/make_wordlist.py

echo_config_var:
  desc: "testing"
  cmds:
    - echo "{{ .SCRIPTS_PATH }}/{{ .LETTER_TO_SOUND }}"

json-to-kaldi:
  desc: "Generate files for the Kaldi format"
  cmds:
    - python3 audio_segmenter/json_to_kaldi.py --output-folder="{{ .TMP_PATH }}/kaldi"

